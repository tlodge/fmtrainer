{"version":3,"sources":["features/review/Review.module.css","features/train/Train.module.css","features/train/trainSlice.js","features/train/components/Main/useCamera.js","features/train/components/Main/Main.js","features/review/reviewSlice.js","features/review/components/Review/Review.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","record","gesture","axios","method","url","encodeURIComponent","STATUSES","COUNTDOWN","INSTRUCTIONS","trainSlice","createSlice","name","initialState","amListening","marked","status","instructions","rawTranscript","preview","classification","reducers","setInstructions","state","action","payload","setStatus","setPreview","setMarked","setRawTranscript","setClassification","reset","startedListening","amFinished","issueConfirm","readytorecord","toLowerCase","setGesture","trim","index","indexOf","substring","actions","getGesture","train","getStatus","getInstructions","getListening","getMarked","getRawTranscript","showPreview","getClassification","handleGesture","dispatch","getState","console","log","ondata","amdone","source","EventSource","onopen","onerror","err","close","onmessage","e","data","startCountdown","setTimeout","initialiseCamera","a","navigator","mediaDevices","getUserMedia","audio","video","useCamera","videoRef","useState","isCameraInitialised","setIsCameraInitialised","setVideo","error","setError","playing","setPlaying","useEffect","current","HTMLVideoElement","val","valRef","useRef","useCleanup","then","stream","srcObject","catch","message","videoElement","play","pause","Main","BrowserSpeechRecognition","window","SpeechRecognition","webkitSpeechRecognition","mozSpeechRecognition","msSpeechRecognition","oSpeechRecognition","recognition","continous","interimResults","lang","useSelector","amMarked","amRecording","calibrate","useDispatch","finalTranscript","interimTranscript","onend","start","onresult","event","i","resultIndex","results","length","transcript","isFinal","createRef","canvasRef","streamPhotos","canvas","setInterval","getContext","drawImage","toDataURL","image","response","category","className","style","padding","cn","styles","vcontainer","display","ref","autoPlay","muted","controls","width","height","grid","src","fontSize","fontWeight","textTransform","marginBottom","color","dangerouslySetInnerHTML","__html","id","button","onClick","footer","reviewSlice","images","categories","total","setImages","getImages","review","getTotal","getCategories","fetchImages","Review","startImage","setStartImage","endImage","setEndImage","selectCategory","Math","min","max","selected","reduce","acc","item","idx","topcontainer","map","bothselected","inrange","amstart","amend","end","imagecontainer","markImage","_categories","Object","keys","k","categorybar","renderSelectCategory","App","to","path","counterSlice","value","increment","decrement","incrementByAmount","configureStore","reducer","counter","counterReducer","trainReducer","reviewReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22002a18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topcontainer\":\"Review_topcontainer__oSrtc\",\"imagecontainer\":\"Review_imagecontainer__tE3or\",\"marked\":\"Review_marked__on5-r\",\"start\":\"Review_start__1caLc\",\"end\":\"Review_end__2mp8v\",\"categorybar\":\"Review_categorybar__3vtAN\",\"category\":\"Review_category__11-7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Train_button__2wHuI\",\"footer\":\"Train_footer__WmYe4\",\"classification\":\"Train_classification__1znlx\",\"vcontainer\":\"Train_vcontainer__2e2zf\",\"grid\":\"Train_grid__1hjVd\"};","import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst sendit =  ()=>{\n  axios({\n    method:\"post\",\n    url : '/set_gesture',\n    data : {\n        hello: \"world\"\n    }\n  });\n}\n\nconst record = (gesture)=>{\n  axios({\n   method:\"get\",\n   url : encodeURIComponent(`/record/${gesture}`),\n  });\n}\n\nconst train = (ondata, amdone)=>{\n  \n  const source = new EventSource('/trains');\n\n  source.onopen = ()=>{\n    console.log(\"connection successfully opened!!\");\n  }\n  source.onerror = (err)=>{\n    console.log(\"error connecting\", err);\n    source.close();\n  }\n  source.onmessage = function(e) {\n    if (e.data.indexOf(\"StreamExecutor\") !== -1 || e.data.indexOf(\"COMPLETE\") !==-1){\n      console.log(\"FINISHED TRAINING\")\n      amdone();\n      source.close();\n    }else{\n      ondata(e.data);\n    }\n  }\n\n /*axios({\n   method:\"get\",\n   url : '/train',\n  });*/\n}\n\nconst done = ()=>{\n axios({\n   method:\"get\",\n   url : '/done',\n  });\n}\n\nconst mark = ()=>{\n  console.log(\"calling mark!\")\n  axios({\n    method:\"get\",\n    url : '/mark',\n   });\n }\n\n const endmark = ()=>{\n  console.log(\"calling END mark!\")\n  axios({\n    method:\"get\",\n    url : '/endmark',\n   });\n }\n\nconst STATUSES = {\n    \"NOT_LISTENING\" : \"not listening\",\n    \"AWAITING_GESTURE\" : \"awaiting gesture\",\n    \"AWAITING_CONFIRMATION\" : \"awaiting confirmation\",\n    \"FIVE\" : \"5\",\n    \"FOUR\" : \"4\",\n    \"THREE\" : \"3\",\n    \"TWO\" : \"2\",\n    \"ONE\" : \"1\",\n    \"RECORDING\": \"recording\",\n    \"TRAINING\":\"training\",\n    \"TESTING\":\"testing\",\n}\n\nconst COUNTDOWN = [\"FIVE\", \"FOUR\", \"THREE\", \"TWO\", \"ONE\", \"RECORDING\"];\n\nconst INSTRUCTIONS = {\n  \"NOT_LISTENING\"         : \"press button to start listening for instructions\",\n  \"AWAITING_GESTURE\"      : `say <strong>record</strong> followed by the <strong><i>name of the gesture</i></strong> you'd like to train`,\n  \"AWAITING_CONFIRMATION\" : `say <strong>ready</strong> to start recording a gesture with this name or <strong>cancel</strong> to restate gesture`,\n  \"FIVE\" : \"recording in <strong>five</strong> seconds...\",\n  \"FOUR\" : \"recording in <strong>four</strong> seconds...\",\n  \"THREE\" : \"recording in <strong>three</strong> seconds...\",\n  \"TWO\" : \"recording in <strong>two</strong> seconds...\",\n  \"ONE\" : \"recording in <strong>one</strong> second!\",\n  \"RECORDING\" : `record gesture, say <strong>ok</strong> or <strong>done</strong> when done, or <strong>cancel</strong> to discard`, \n  \"TRAINING\" : `now training...this will take a while...`,\n  \"TESTING\" : `now testing what we have learnt!`,\n}\n\nexport const trainSlice = createSlice({\n  name: 'train',\n\n  initialState: {\n    amListening: false,\n    marked: false,\n    status: STATUSES[\"NOT_LISTENING\"],\n    instructions: INSTRUCTIONS[\"NOT_LISTENING\"],\n    gesture: \"\",\n    rawTranscript: \"\",\n    preview:false,\n    classification:\"unknown\"\n  },\n  \n  reducers: {\n\n    setInstructions: (state, action)=>{\n      state.instructions = action.payload;\n    },\n\n    setStatus: (state, action)=>{\n      state.status = STATUSES[action.payload];\n      state.instructions = INSTRUCTIONS[action.payload];\n    },\n\n    setPreview: (state, action)=>{\n      state.preview=action.payload;\n    },\n\n    setMarked: (state, action)=>{\n      state.marked=action.payload;\n    },\n\n    setRawTranscript: (state, action)=>{\n      state.rawTranscript = action.payload;\n    },\n    setClassification: (state, action)=>{\n      state.classification = action.payload;\n    },\n    reset: (state, action)=>{\n      state.status       = STATUSES[\"AWAITING_GESTURE\"]\n      state.instructions =  INSTRUCTIONS[\"AWAITING_GESTURE\"] \n      state.gesture = \"\"\n      state.preview = false;\n    },\n\n    startedListening: (state, action)=>{\n      if (action.payload){\n        state.amFinished = false;\n        state.amListening = true;\n        state.status       = STATUSES[\"AWAITING_GESTURE\"]\n        state.instructions =  INSTRUCTIONS[\"AWAITING_GESTURE\"] \n      }else{\n        state.status = STATUSES[\"NOT_LISTENING\"]\n        state.instructions =  INSTRUCTIONS[\"NOT_LISTENING\"] \n      }\n    },\n    issueConfirm: (state, action) => {\n      state.readytorecord = action.payload.toLowerCase() === \"yes\";\n    },\n    setGesture: (state, action) => {\n     \n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      if (action.payload.trim() === \"\"){\n        return;\n      }\n\n      const index = action.payload.toLowerCase().indexOf(\"record\");\n      \n      if (index !== -1){\n        state.gesture  = `${action.payload.substring(index+6).trim()}`;\n        state.status=  STATUSES[\"AWAITING_CONFIRMATION\"]\n        state.instructions =  INSTRUCTIONS[\"AWAITING_CONFIRMATION\"]\n      }//else{\n       // state.command = \"\";\n      //}\n    },\n  },\n});\n\nexport const {setGesture, setStatus, startedListening, amListening, reset, setRawTranscript, setPreview, setInstructions, setClassification, setMarked} = trainSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getGesture = state => state.train.gesture;\nexport const getStatus =  state => state.train.status;\nexport const getInstructions = state => state.train.instructions;\nexport const getListening = state => state.train.amListening;\nexport const getMarked = state=>state.train.marked;\nexport const getRawTranscript = state => state.train.rawTranscript;\nexport const showPreview = state=>state.train.preview;\nexport const getClassification = state=>state.train.classification;\n\nexport const handleImage = (action) => (dispatch, getState)=>{\n  const state = getState().train;\n  \n  if (state.status === STATUSES[\"RECORDING\"]){\n    axios({\n      method:\"post\",\n      url : '/image',\n      data : {image:action}\n    });\n  }\n  if (state.status === STATUSES[\"TESTING\"]){\n    axios({\n      method:\"post\",\n      url : '/classify',\n      data : {image:action}\n    }).then((response)=>{\n      const {category=\"unknown\"} = response.data;\n      dispatch(setClassification(category));\n    })\n  }\n}\n\nexport const handleGesture = (action) => (dispatch, getState) =>{\n\n  const state = getState().train;\n  \n  dispatch(setRawTranscript(action.toLowerCase().trim()));\n\n  if (action.toLowerCase().trim()===\"test\"){\n    dispatch(setStatus(\"TESTING\"));\n    dispatch(setPreview(true));\n    return;\n  }\n\n  if (action.toLowerCase().trim()===\"mark\"){\n      console.log(\"marking\");\n      dispatch(setMarked(true));\n      mark();\n  }\n\n  if (action.toLowerCase().trim()===\"end\"){\n      console.log(\"end mark\");\n      dispatch(setMarked(false));\n      endmark();\n  }\n  \n  if (action.toLowerCase().trim()===\"train\"){\n    if (state.status != STATUSES[\"TRAINING\"]){\n      dispatch(reset());\n      dispatch(setStatus(\"TRAINING\"));\n      train((data)=>{dispatch(setInstructions(data))}, ()=>{\n        dispatch(reset())\n      });\n      return;\n    }\n  }\n\n  if ([\"done\", \"ok\"].indexOf(action.toLowerCase().trim()) !== -1){\n     dispatch(reset());\n     done();\n     return;\n  }\n\n  if (action.toLowerCase().trim()===\"cancel\"){\n    dispatch(reset());\n    return;\n  }\n\n  if (state.status===STATUSES[\"AWAITING_CONFIRMATION\"]){ \n    if (action.toLowerCase().trim()===\"ready\"){\n      dispatch(setStatus(\"RECORDING_COUNTDOWN\"));\n      dispatch(startCountdown(state));\n      return;\n    }\n  }\n  dispatch(setGesture(action));\n}\n\nexport const startCountdown = (state, index=0) => dispatch =>{\n\n    dispatch(setStatus(COUNTDOWN[index]));  \n    \n    if (index==5){\n      console.log(\"calling record with \", state);\n      dispatch(setPreview(false))\n      record(state.gesture);\n    }    \n  \n    if (index<5){\n      dispatch(setPreview(true))\n      setTimeout(()=>startCountdown(state, ++index)(dispatch), 1000);\n    }\n}\n\n\nexport default trainSlice.reducer;\n","import { useEffect, useState, useRef } from 'react';\n\nconst useCleanup = (val) => {\n    const valRef = useRef(val);\n\n    useEffect(() => {\n       valRef.current = val;\n    }, [val])\n\n    useEffect(() => {\n        return () => {\n              // cleanup based on valRef.current\n        }\n    }, [])\n}\n\nconst initialiseCamera = async() => await navigator.mediaDevices.getUserMedia({audio: false, video: true});\n\nexport const useCamera = videoRef => {\n    const [isCameraInitialised, setIsCameraInitialised] = useState(false);\n    const [video, setVideo] = useState(null);\n    const [error, setError] = useState('');\n    const [playing, setPlaying] = useState(true);\n\n    useEffect(() => {\n        if(video || !videoRef.current) {\n            return;\n        }\n\n        const videoElement = videoRef.current;\n        if(videoElement instanceof HTMLVideoElement) {\n            setVideo(videoRef.current);\n        }\n    }, [videoRef, video]);\n\n\n    useCleanup(video)\n\n    useEffect(() => {\n        if(!video || isCameraInitialised || !playing) {\n            return;\n        }\n\n        initialiseCamera()\n            .then(stream => {\n                video.srcObject = stream;\n                setIsCameraInitialised(true);\n            })\n            .catch(e => {\n                setError(e.message);\n                setPlaying(false);\n            });\n    }, [video, isCameraInitialised, playing]);\n\n    useEffect(() => {\n        const videoElement = videoRef.current;\n\n        if(playing) {\n            videoElement.play();\n        } else {\n            videoElement.pause();\n        }\n\n    },[playing, videoRef]);\n    \n    return [video, isCameraInitialised, playing, setPlaying, error];\n};","import React, { useState, useRef, useEffect, createRef, useImperativeHandle } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport cn from 'classNames';\n\nimport {\n    getListening,\n    getMarked,\n    getGesture,\n    getStatus,\n    getRawTranscript,\n    getClassification,\n    getInstructions,\n    showPreview,\n    handleGesture,\n    handleImage,\n    startedListening\n} from '../../trainSlice';\n\nimport { useCamera } from './useCamera';\nimport styles from '../../Train.module.css';\n\n//-----------------SPEECH RECOGNITION SETUP---------------------\n\n//------------------------COMPONENT-----------------------------\n\n\nexport default function Main() {\n    const BrowserSpeechRecognition =\n    typeof window !== 'undefined' &&\n    (window.SpeechRecognition ||\n      window.webkitSpeechRecognition ||\n      window.mozSpeechRecognition ||\n      window.msSpeechRecognition ||\n      window.oSpeechRecognition)\n\nconst recognition = BrowserSpeechRecognition ? new BrowserSpeechRecognition() : null\nrecognition.continous = true\nrecognition.interimResults = true\nrecognition.lang = 'en-US'\n\n  const [src, setSrc] = useState()\n  const gesture = useSelector(getGesture);\n  const instructions = useSelector(getInstructions);\n  const amListening = useSelector(getListening);\n  const amMarked = useSelector(getMarked);\n  const rawTranscript = useSelector(getRawTranscript);\n  const amRecording = useSelector(getStatus) === \"recording\";\n  const calibrate = useSelector(getStatus) === \"calibrating\";\n  const preview = useSelector(showPreview);\n  const classification = useSelector(getClassification);\n\n  const dispatch = useDispatch();\n  let finalTranscript = '', interimTranscript='';\n\n  recognition.onend = () => {\n    finalTranscript = \"\";\n    recognition.start();\n    //dispatch(startedListening(false));\n    //handleListen();\n    //}else{\n    //  console.log(\"not calling restart!!\");\n    //}\n  }\n\n  recognition.onresult = event => {    \n        \n    interimTranscript = ''\n    \n    for (let i = event.resultIndex; i < event.results.length; i++) {\n      const transcript = event.results[i][0].transcript;\n      if (event.results[i].isFinal){ \n        finalTranscript += transcript + ' ';\n      }\n      else{ \n        interimTranscript += transcript;\n        dispatch(handleGesture(interimTranscript));\n      }\n    }\n    dispatch(handleGesture(finalTranscript));\n  }\n \n  const handleListen = ()=>{ \n      // handle speech recognition here\n      finalTranscript = \"\";\n      console.log(\"in handle listener: am listening\", amListening);\n      \n      if (!amListening) {\n        dispatch(startedListening(true));\n        streamPhotos(canvasRef.current, videoRef.current);\n        console.log(\"OK STARTING LISTENING!\");\n        recognition.start();\n      } \n  } \n  const videoRef = createRef();\n  const canvasRef = createRef();\n  const [video, isCameraInitialised, running, setPlaying, error] = useCamera(videoRef);\n\n  const renderCamera = ()=>{\n    return <><video\n    className={cn({[styles.vcontainer]:amMarked})}\n    style={{display: (amRecording || preview || calibrate) ? \"block\" : \"none\"}}\n    ref={videoRef}\n    autoPlay={true}\n    muted={true}\n    controls\n    width=\"auto\"\n    height={400}/>\n    <canvas style={{display:\"none\"}}ref={canvasRef} width={128} height={128}/>\n    {preview && classification.trim()!=\"unknown\" && <div className={styles.classification}>{classification}</div>}\n    {calibrate && <img className={styles.grid} src=\"./static/media/grid.svg\" width=\"600px\" height=\"400px\"/>}\n    </>\n    \n  }\n  \n \n  const streamPhotos = (canvas, video)=>{\n      \n      setInterval(()=>{\n        var context = canvas.getContext('2d');\n        context.drawImage(video, 0, 0, 128, 128);\n        dispatch(handleImage(canvas.toDataURL('image/png')));\n        \n      },1000);\n  }\n\n  return (\n    <div className=\"App-content\">\n      <div style={{padding:\"0px 100px 100px 100px\"}}>\n        {renderCamera()}\n        <div style={{fontSize:80, fontWeight:700, textTransform:\"uppercase\", marginBottom:30}}>{gesture}</div>\n        {amListening && <div style={{color:\"#736A6A\"}} dangerouslySetInnerHTML={{__html:instructions}}/>}\n        {!amListening && <button id='microphone-btn' className={styles.button} onClick={handleListen}>START LISTENING</button>}\n    </div>\n     {rawTranscript.trim()!=\"\" && <div className={styles.footer}>{`\"${rawTranscript}\"`}</div>}\n     </div>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nexport const reviewSlice = createSlice({\n  name: 'review',\n\n  initialState: {\n    images: [],\n    categories: {},\n    total: 0,\n  },\n  \n  reducers: {\n    setImages: (state, action)=>{ \n      state.images = action.payload.images;\n      state.categories = action.payload.categories;\n      state.total = action.payload.total;\n    }\n  },\n});\n\nexport const {setImages} = reviewSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const getImages = state => state.review.images;\nexport const getTotal = state =>state.review.total;\nexport const getCategories = state => state.review.categories;\n\nexport const fetchImages = (action) => (dispatch, getState)=>{\n   \n    axios({\n      method:\"get\",\n      url : '/marked',\n    }).then((response)=>{\n      const images = response.data || [];\n      dispatch(setImages(images));\n    })\n}\n\nexport const labelImages = (action) => (dispatch, getState)=>{\n  const {category, startImage, endImage} = action;\n  const images = getState().review.images;\n  \n  const selected = images.reduce((acc, item, idx)=>{\n      if (idx >= startImage && idx <= endImage){\n        return [...acc, item];\n      }\n      return acc;\n  },[]);\n\n  console.log(\"selected\", selected, \"category\", category);\n\n  axios({\n    method:\"post\",\n    url : '/label',\n    data: {\n      images: selected,\n      category\n    }\n  }).then((response)=>{\n    dispatch(fetchImages(images));\n  }) \n}\n\n\n\nexport default reviewSlice.reducer;\n","import React, { useState, useRef, useEffect, createRef, useImperativeHandle } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {fetchImages, getImages, getTotal, getCategories, labelImages} from '../../reviewSlice';\nimport {reset} from '../../../train/trainSlice';\nimport cn from 'classNames';\nimport styles from '../../Review.module.css';\n\n\n\nexport default function Review() {\n    const dispatch = useDispatch();\n    const images = useSelector(getImages);\n    const total = useSelector(getTotal);\n    const categories = useSelector(getCategories);\n    const [startImage, setStartImage] = useState(-1);\n    const [endImage, setEndImage] = useState(-1);\n\n    useEffect(() => {\n        dispatch(fetchImages());\n        dispatch(reset());        \n    },[]);\n    \n   const markImage= (i)=>{\n        if (startImage !== -1 && endImage !== -1){\n            setStartImage(images.indexOf(i));\n            setEndImage(-1);\n        }\n        else if (startImage==-1){\n            setStartImage(images.indexOf(i));\n        }else{\n            setEndImage(images.indexOf(i));\n        }\n   }\n\n   const selectCategory = (category)=>{\n       dispatch(labelImages({\n                                category, \n                                startImage:Math.min(startImage, endImage), \n                                endImage: Math.max(startImage, endImage)\n                            }));\n   }\n\n\n   const renderSelectCategory = ()=>{\n        const bothselected = startImage != -1 && endImage != -1;\n        if (bothselected){\n            const _categories = Object.keys(categories).map(k=>{\n                return <div onClick={()=>{selectCategory(categories[k])}} className={styles.category}>{k}</div>\n            });\n\n            return <div className={styles.categorybar}>\n                      {_categories}    \n                    </div>\n        }\n   }\n\n   const renderImageSummary = ()=>{\n        return <div>{`showing ${images.length} images of ${total}`}</div>\n   }\n\n   const renderImages = ()=>{\n    return images.map((i, idx)=>{\n        \n        const bothselected = startImage != -1 && endImage != -1;\n\n        const inrange = bothselected && idx >= Math.min(startImage,endImage) && idx <= Math.max(startImage,endImage);\n        const amstart = !bothselected && idx == Math.min(startImage,endImage);\n        const amend = !bothselected && idx ==  Math.max(startImage,endImage);\n\n        const className=cn({\n                                [styles.marked]:inrange,\n                                [styles.start]:amstart,\n                                [styles.end]: amend,\n                                [styles.imagecontainer]: true,\n                            });\n\n        return <img onClick={()=>markImage(i)} className={className} src={i} width=\"128px\" height=\"128px\"></img>\n    })\n   }\n\n    return <>\n                {renderImageSummary()}\n                <div className={styles.topcontainer}>\n                    {renderImages()}\n                </div>\n                {renderSelectCategory()}\n            </>\n}","import React from 'react';\r\nimport Main from './features/train/components/Main';\r\nimport Review from  './features/review/components/Review';\r\n\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        \r\n              <Link to=\"/review\">Review</Link>\r\n            \r\n        \r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/review\">\r\n            <Review />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Main />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n      \r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport trainReducer from '../features/train/trainSlice';\r\nimport reviewReducer from '../features/review/reviewSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    train: trainReducer,\r\n    review: reviewReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}